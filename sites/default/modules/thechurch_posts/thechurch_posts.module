<?php
// $Id$

/**
 * @file
 * A module that creates the ability to add a 'post'.
 */


/**
 * Implementation of hook_form_FORM_ID_alter().
 */
function thechurch_posts_form_post_node_form_alter(&$form, &$form_state, $form_id) {
	
	// Define the Variables
	$tid = null;
	
	// Get the Current path, if it's a taxonomy, set that to as the taxonomy id
	$path = explode('/', current_path());
	if (isset($path[0]) && $path[0] == 'taxonomy') {
		if (isset($path[1]) &&  $path[1] == 'term') {
			$tid = $path[2];
		}
	}

	// if the taxonomy is null, set it to the user's city.
	if ($tid == null) {
		global $user;
		$user = user_load($user->uid);
		if (isset($user->field_city['und'][0]['tid'])) {
			$tid = $user->field_city['und'][0]['tid'];
		}
	}
	
	// Set the Field City to the Current Term id.
	$form['field_city']['und']['#default_value'][0] = $tid;
	
	// Make sure the form can only be accessed by people who have the right to create posts
	$form['#access'] = user_access('create post content');
	
	// No one should have access to the city field
	$form['field_city']['#access'] = false;
	
	// The title should be unset since it will be set later.
	unset($form['body']['und'][0]['#title']);
	
	// The form's body field should not include the default 'resizable' javascript.
	$form['body']['und'][0]['#resizable'] = 0;
	
	// Rename the 'Submit' button to 'Share'
	$form['actions']['submit']['#value'] = 'Share';
	
	// No one should have access to the additional options
	$form['additional_settings']['#access'] = false;
	
	/*
	print '<pre>';
	print_r($form);
	print '</pre>';
	*/
	
}

/**
 * Implementation of hook_filter_info().
 */
function thechurch_posts_filter_info() {
	
	// Set up the Trim Link Filter
	$filters['filter_trimlink'] = array(
    'title' => t('Trim Well-Formed Links'), 
    'description' => t("Trims the 'http' and 'www' from well-formed links."), 
    'process callback' => 'thechurch_posts_filter_trimlink_process', 
  );
  return $filters;
}

/**
 * Implementation of hook_filter_FILTER_process().
 */
function thechurch_posts_filter_trimlink_process($text, $filter, $format, $langcode, $cache, $cache_id) {
	
	// Process the Trim Link Filter
	$text = preg_replace("/(>http:\/\/www\\.|>https:\/\/www\\.)|(>http:\/\/|>https:\/\/)/us", ">", $text);
	$text = preg_replace("/\/</us", "<", $text);
  return $text;
  
}

/**
 * Implementation of hook_node_view().
 */
function thechurch_posts_node_view($node, $view_mode, $langcode) {
	if ($view_mode == 'teaser') {
		$node->content['comments'] = comment_node_page_additions($node);
	}
}