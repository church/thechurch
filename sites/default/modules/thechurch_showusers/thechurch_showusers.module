<?php
// $Id$

/**
 * @file
 * A module that displays a set of random users or the user's closest users
 *
 * This module usese several hooks to create a block and display users
 */

/**
 * Implements hook_menu().
 */
function thechurch_showusers_menu() {
  $items['showusers'] = array(
  	'title' => 'showusers', 
    'page callback' => 'thechurch_showusers_findusers',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  return $items;
}

function thechurch_showusers_findusers($tid = null) {
	  
  global $user;
  
  $user = user_load($user->uid);
  
  // Find 12 users
  $query = db_select('users' , 'u');
  $picture = $query->join('file_managed', 'p', 'p.fid = u.picture');
  $city = $query->join('field_data_field_city', 'c', 'c.entity_id = u.uid');
  $fullname = $query->join('field_data_field_fullname', 'fn', 'fn.entity_id = u.uid');
  $latitude = $query->join('field_data_field_latitude', 'lat', 'lat.entity_id = u.uid');
  $longitude = $query->join('field_data_field_longitude', 'lon', 'lon.entity_id = u.uid');
  $query->fields('u', array('uid', 'picture', 'name'));
  $query->fields('p', array('fid', 'filename'));
  $query->fields('c', array('entity_id', 'field_city_tid'));
  $query->fields('lat', array('entity_id', 'field_latitude_value'));
  $query->fields('lon', array('entity_id', 'field_longitude_value'));
  $query->fields('fn', array('entity_id', 'field_fullname_value'));
  $query->condition('c.entity_type', 'user', '=');
  $query->condition('fn.entity_type', 'user', '=');
  $query->condition('lat.entity_type', 'user', '=');
  $query->condition('lon.entity_type', 'user', '=');
  $query->condition('u.uid', 0, '!=');
  $query->condition('u.uid', 1, '!=');
  if (isset($tid)) {
     $query->condition('c.field_city_tid', $tid , '=');
  }
  if ($user->uid != 0) {
    $query->condition('u.uid', $user->uid, '!=');
    $query->orderBy('SQRT(('.$user->field_latitude['und'][0]['value'].' - lat.field_latitude_value)^2 + ('.$user->field_longitude['und'][0]['value'].' - lon.field_longitude_value)^2)', 'ASC'); 
  } else {
  	$query->orderRandom();
  }
  $query->range(0, 13);
  $result = $query->execute();
  foreach ($result as $row) {
      $img_args = array('style_name' => 'square', 'path' => 'pictures/'.$row->filename, 'alt' => '', 'title' => $row->field_fullname_value);
      $img = theme('image_style', $img_args);
      $link_args = array('text' => $img, 'path' => 'user/'.$row->uid, 'options' => array('attributes' => array(), 'html' => 'true'));
      print theme('link', $link_args);
  }

}


/**
 * Implements hook_entity_view().
 */
function thechurch_showusers_entity_view($entity, $type, $view_mode, $langcode) {

	if ($type == 'node') {
	
		if ($entity->nid == 9) {
		
			$showusers = array(
	    	t('Show Users')  => array(
	    		'type' => 'markup',
	      	'#markup' => '<div id="showusers"></div>',
	    	),
	    );
			  	
	  	$entity->content['showusers'] = $showusers;
			
		}
	
	}

}

/**
 * Implements template_preprocess_taxonomy_term()
 */
function thechurch_showusers_preprocess_taxonomy_term(&$variables) {
	if ($variables['vocabulary_machine_name'] == 'city') {
	
			// Get the Number of Members for a Node
		  $query = db_select('field_data_field_city' , 'c');
		  $query->condition('c.field_city_tid', $variables['tid'], '=');
		  $query->condition('c.entity_type', 'user', '=');
			$count = $query->countQuery();
			$result = $count->execute();
			
			$member_count = 0;
			
			foreach ($result as $row) {
				$member_count = $row->expression;
			}
			
			if ($member_count > 13) {
				$class = ' class="full"';
			} else {
				$class = ' class="notfull"';
			}
			
			$showusers = array(
	    	t('Show Users')  => array(
	    		'type' => 'markup',
	      	'#markup' => '<div id="showusers"'.$class.'></div>',
	    	),
	    );
			  	
	  	$variables['content']['showusers'] = $showusers;
	}
}

function thechurch_showusers_addcityid() {
	$path = drupal_lookup_path('source', current_path());
	$path = explode('/', $path);
	if (isset($path[0]) && $path[0] == 'taxonomy') {
		if (isset($path[1]) &&  $path[1] == 'term') {
			drupal_add_html_head(array('#tag' => 'meta', '#attributes' => array('name' => 'term', 'content' => $path[2])), 'meta-term');
		}
	}
}

thechurch_showusers_addcityid();
 
